[metadata]
name = sunkit-instruments
provides = sunkit_instruments
description = A SunPy-affiliated package for solar instrument-specific tools.
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The SunPy Community
author_email = sunpy@googlegroups.com
license = BSD 3-Clause
license_files = LICENSE.rst
url = https://sunpy.org
edit_on_github = True
github_project = sunpy/sunkit_instruments
platform = any
keywords = solar physics, solar, science, telescope, instrumentation
classifiers =
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Programming Language :: Python :: 3.12
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.10
packages = find:
include_package_data = True
setup_requires =
  setuptools_scm
install_requires =
  scipy
  sunpy[map,net,timeseries,visualization]>=6.0.0

[options.extras_require]
tests =
  pytest-astropy
docs =
  sphinx
  sphinx-automodapi
  sphinx-changelog
  sphinx-gallery
  sunpy-sphinx-theme

[options.packages.find]
exclude = sunkit_instruments._dev

[tool:pytest]
testpaths = "sunkit_instruments" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".history" "sunkit_instruments/_dev"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = -rsa -vvv --doctest-rst --doctest-ignore-import-errors -p no:unraisableexception -p no:threadexception
markers =
    remote_data: marks this test function as needing remote data.
remote_data_strict = True
# Pin junit behaviour; we might want to update this to xunit2 at some point
junit_family=xunit1
filterwarnings =
    error
    # Do not fail on pytest config issues (i.e. missing plugins) but do show them
    always::pytest.PytestConfigWarning
    #
    # A list of warnings to ignore follows. If you add to this list, you MUST
    # add a comment or ideally a link to an issue that explains why the warning
    # is being ignored
    #
    #
    # https://github.com/pytest-dev/pytest-cov/issues/557
    ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning
    ignore:Unknown units for CHANNEL:sunpy.util.exceptions.SunpyUserWarning
    ignore:.*is deprecated and slated for removal in Python 3:DeprecationWarning
    ignore:.*Something went wrong.*

[isort]
line_length = 110
profile = black

[coverage:run]
omit =
  */sunkit_instruments/__init__*
  */sunkit_instruments/*/tests/*
  */sunkit_instruments/*setup*
  */sunkit_instruments/conftest.py
  */sunkit_instruments/cython_version*
  */sunkit_instruments/data/_sample.py
  */sunkit_instruments/data/sample.py
  */sunkit_instruments/extern/*
  */sunkit_instruments/version*
  sunkit_instruments/__init__*
  sunkit_instruments/*/tests/*
  sunkit_instruments/*setup*
  sunkit_instruments/conftest.py
  sunkit_instruments/cython_version*
  sunkit_instruments/data/_sample.py
  sunkit_instruments/data/sample.py
  sunkit_instruments/extern/*
  sunkit_instruments/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
