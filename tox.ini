[tox]
envlist =
    py{38,39,310}{,-oldestdeps,-devdeps,-online}
    build_docs
    codestyle
requires =
    setuptools
    pip
    tox-pypi-filter
isolated_build = true

[testenv]
# pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# We use bash in some of our enviroments so we have to whitelist it.
whitelist_externals=
    /bin/bash
    /usr/bin/bash
# Run the tests in a temporary directory to make sure that we don't import
# sunpy from the source tree
changedir = .tmp/{envname}
# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv -s -raR --durations=25 --pyargs sunkit_instruments --cov-report=xml --cov=sunkit_instruments --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    devdeps,build_docs,online: HOME = {envtmpdir}
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/{envname}/sample_data/}
passenv =
    HOME
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY
    CIRCLECI
deps =
    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist
    # The devdeps factor is intended to be used to install the latest developer version of key dependencies.
    devdeps: git+https://github.com/sunpy/sunpy
    # These are specific online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout
    # Oldest deps we pin against.
    oldestdeps: sunpy<3.0
# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything
extras =
    dev
commands =
    !online: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --reruns-delay 15 --timeout=180 --remote-data=any {posargs}

[testenv:build_docs]
usedevelop = true
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = dev
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color auto --all-files --show-diff-on-failure
